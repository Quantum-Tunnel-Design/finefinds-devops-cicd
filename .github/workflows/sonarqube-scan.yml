name: SonarQube Scan

on:
  push:
    branches: [ main, dev, qa, staging, sandbox ]
  pull_request:
    branches: [ main, dev, qa, staging, sandbox ]

jobs:
  sonarqube-scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=finefinds-${{ github.ref_name }}
            -Dsonar.projectName=FineFinds-${{ github.ref_name }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js,**/__tests__/**
            -Dsonar.testExecutionReportPaths=test-report.xml
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.qualitygate.conditions=${{ github.ref_name == 'main' && 'coverage >= 80,duplicated_lines_density <= 3' || github.ref_name == 'staging' && 'coverage >= 70,duplicated_lines_density <= 5' || 'coverage >= 60,duplicated_lines_density <= 7' }}

      - name: Check Quality Gate status
        uses: SonarSource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 