name: CDK Deploy

on:
  push:
    branches: [main, qa, staging, dev]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Map branches to environments for GitHub Actions
    environment: >-
      ${{ 
        github.ref == 'refs/heads/main' && 'prod' || 
        github.ref == 'refs/heads/staging' && 'staging' || 
        github.ref == 'refs/heads/qa' && 'qa' || 
        'dev' 
      }}
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-east-1
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
      CDK_DEFAULT_REGION: us-east-1
      # Define environment for CDK deployment
      CDK_ENV: >-
        ${{ 
          github.ref == 'refs/heads/main' && 'prod' || 
          github.ref == 'refs/heads/staging' && 'staging' || 
          github.ref == 'refs/heads/qa' && 'qa' || 
          'dev' 
        }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: infra/package-lock.json

      - name: Install Dependencies
        run: |
          cd infra
          npm ci

      - name: CDK Diff
        if: github.event_name == 'pull_request'
        run: |
          cd infra
          npm run cdk diff ${{ env.CDK_ENV }}

      - name: CDK Deploy
        if: github.event_name == 'push' 
        run: |
          cd infra
          npm run cdk deploy -- --require-approval never
        env:
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION }} 

      - name: Slack Notification (Success)
        if: success()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL_DEVOPS }}
          webhook-type: webhook-trigger
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_DEVOPS }}",
              "attachments": [
                {
                  "color": "#36a64f",
                  "pretext": ":white_check_mark: *CDK Deploy Succeeded*",
                  "fields": [
                    { "title": "Environment", "value": "${{ env.CDK_ENV }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Actor", "value": "${{ github.actor }}", "short": true },
                    { "title": "Commit", "value": "${{ github.sha }}", "short": false }
                  ],
                  "actions": [
                    {
                      "type": "button",
                      "text": "View Workflow",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_DEVOPS_TOKEN }}

      - name: Slack Notification (Failure)
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL_DEVOPS }}
          webhook-type: webhook-trigger
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL }}",
              "attachments": [
                {
                  "color": "#ff0000",
                  "pretext": ":x: *CDK Deploy Failed*",
                  "fields": [
                    { "title": "Environment", "value": "${{ env.CDK_ENV }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Actor", "value": "${{ github.actor }}", "short": true },
                    { "title": "Commit", "value": "${{ github.sha }}", "short": false }
                  ],
                  "actions": [
                    {
                      "type": "button",
                      "text": "View Workflow",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 