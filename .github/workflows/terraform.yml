name: 'Terraform'

on:
  push:
    branches: [ main, dev, qa, staging, sandbox ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-${{ github.ref_name }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: |
        cd terraform/environments/${{ github.ref_name }}
        terraform init

    - name: Terraform Plan
      run: |
        cd terraform/environments/${{ github.ref_name }}
        terraform plan

    - name: Terraform Apply
      run: |
        cd terraform/environments/${{ github.ref_name }}
        terraform apply -auto-approve

    - name: Get SonarQube URL
      id: sonarqube
      run: |
        cd terraform/environments/${{ github.ref_name }}
        SONARQUBE_URL=$(terraform output -raw sonarqube_url)
        echo "url=$SONARQUBE_URL" >> $GITHUB_OUTPUT

    - name: Setup SonarQube
      if: github.ref_name == 'main'
      run: |
        # Wait for SonarQube to be ready
        echo "Waiting for SonarQube to be ready..."
        SONARQUBE_URL="${{ steps.sonarqube.outputs.url }}"
        for i in {1..30}; do
          if curl -s "$SONARQUBE_URL" > /dev/null; then
            echo "SonarQube is ready!"
            break
          fi
          echo "Waiting... ($i/30)"
          sleep 10
        done

        # Generate SonarQube token
        echo "Generating SonarQube token..."
        TOKEN=$(curl -s -X POST \
          -u "admin:admin" \
          -d "name=github-actions" \
          "$SONARQUBE_URL/api/user_tokens/generate" | jq -r '.token')

        # Set GitHub secrets
        gh secret set SONAR_TOKEN -b"$TOKEN" -e"${{ github.ref_name }}"
        gh secret set SONAR_HOST_URL -b"$SONARQUBE_URL" -e"${{ github.ref_name }}"

        echo "SonarQube setup completed!" 