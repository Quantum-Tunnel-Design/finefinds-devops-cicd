version: '3.8'

services:
  sonarqube:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_temp:/opt/sonarqube/temp
    networks:
      - sonarqube-network
    depends_on:
      - sonarqube-db
    restart: unless-stopped
    ulimits:
      nproc: 65535
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 3G
    healthcheck:
      test: ["CMD", "/opt/sonarqube/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

  sonarqube-db:
    image: postgres:13
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - sonarqube-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  sonarqube-network:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonarqube_temp:
  sonarqube_db: 